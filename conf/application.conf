# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName=self-assessment-api

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Play Modules
# ~~~~
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.backend.filters.BackendFilters"

# Json error handler
play.http.errorHandler = "config.ErrorHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="oBUazGJK4ZBQkajkDNluNd6cUkqgvBN9NVXJ0h2kgwFBqTWtOi8yTtL4sxGksKcG"

# Session configuration
# ~~~~~
application.session.httpOnly=false
application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {

  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  router.controllers.DocumentationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Api related config
api {
    # The status of the version of the API for the API Platform.
    1.0 {
        status = "RETIRED"
    }
    2.0 {
        status = "BETA"
    }

    confidence-level-check.definition.enabled = true

    # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
    gateway.context = "self-assessment"

}

# Allowlisted headers
# ~~~~~
# A list of headers not supported by HeaderCarrier that will not be stripped off the request coming into the application
bootstrap.http.headersAllowlist = [ "Authorization", "Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Client-Id", "X-Session-Id" ]

# Play WS settings
play.ws.followRedirects = false

# Internal service host patterns
# ~~~~~
# A list of patter
# Defaults to [ "^.*\\.service$", "^.*\\.mdtp$" ]
internalServiceHostPatterns = [ "localhost" ]

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

environmentHeaders = [ "Authorization", "Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Client-Id", "X-Session-Id" ]

deprecated-routes = [
    {
        method = GET
        routeRegex = "^/ni/.{9}/uk-properties$"
    }

    {
        method = POST
        routeRegex = "^/ni/.{9}/calculations$"
    }

    {
        method = GET
        routeRegex = "^/ni/.{9}/calculations/.{36}$"
    }

    {
        method = GET
        routeRegex = "^/ni/.{9}/calculations/.{36}/validation-messages$"
    }
]

feature-switch {

    test-scenario-simulation {
        enabled = true
    }

    release-2{
        enabled = true
    }

    charitable-giving-version-2 {
        enabled = true
    }

    dividends-income-version-2 {
        enabled = true
    }

    savings-accounts-version-2 {
        enabled = true
    }

    crystallisation-version-2 {
        enabled = true
    }
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host = localhost
            port = 8500
        }

        datastream {
            host = localhost
            port = 8100
            enabled = false
        }

        service-locator {
            host = localhost
            port = 9602
            enabled = false
        }

        self-assessment-api {
            host = localhost
            port = 9778
        }

        mtd-tax-calculation {
            host = localhost
            port = 9770
        }

        mtd-property-api {
            host = localhost
            port = 9771
        }

        mtd-self-employment {
            host = localhost
            port = 9773
        }
        
        mtd-charitable-giving {
            host = localhost
            port = 9774
        }

        mtd-dividends-income {
            host = localhost
            port = 9775
        }

        mtd-savings-accounts {
            host = localhost
            port = 9776
        }

        mtd-crystallisation {
            host = localhost
            port = 9777
        }
    }
}
